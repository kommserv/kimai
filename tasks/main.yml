---

- name: Setup Kimai
  block:

    - name: Check that all the variables needed are defined
      ansible.builtin.assert:
        that:
          - kimai_version is defined
          - kimai_app_env is defined
          - kimai_user is defined
          - kimai_group is defined
          - kimai_wwwroot is defined
          - kimai_dbuser is defined
          - kimai_dbpass is defined
          - kimai_dbhost is defined
          - kimai_dbport is defined
          - kimai_dbname is defined
          - kimai_user_registration is defined

    # create database
    - ansible.builtin.import_tasks: database.yml


    - name: Install and / or upgrade Kimai
      block:

        - name: Install required packages
          ansible.builtin.apt:
            name:
              - git
              - gnupg
              - pwgen
            state: present

        # - name: "Populate the getent_passwd array for {{ inventory_hostname }}"
        #   getent:
        #     database: passwd
        #     split: ':'

        # - name: "Fail if the {{ kimai_user }} user account doesn't exist"
        #   fail:
        #     msg: "The {{ kimai_user }} user account doesn't exist on {{ inventory_hostname }}"
        #   when: kimai_user not in getent_passwd

        - name: Check the installed version of Kimai
          ansible.builtin.import_tasks: version-check.yml

        - name: Install Kimai
          ansible.builtin.import_tasks: install.yml
          when: kimai_installed is not defined

        - name: "Upgrade Kimai when {{ kimai_installed }} is less than {{ kimai_version }}"
          ansible.builtin.import_tasks: upgrade.yml
          when:
            - ( kimai_version is defined ) and ( kimai_installed is defined )
            - ( kimai_installed is version(kimai_version, '<') )

        - name: Check the latest version of Kimai
          ansible.builtin.import_tasks: latest.yml

        - name: An update is available
          ansible.builtin.debug:
            msg: "Kimai version {{ kimai_installed }} is installed and the latest version available is {{ kimai_latest }}, update the kimai_version variable to upgrade"
          when:
            - ( kimai_latest is defined ) and ( kimai_installed is defined )
            - ( kimai_installed is version(kimai_latest, '<') )
      # END OF BLOCK


    # change ownership to www-data and symlink to www-root
    - ansible.builtin.import_tasks: vhost.yml

    - ansible.builtin.import_tasks: backup.yml
      tags: backups-only
  # END OF BLOCK


- ansible.builtin.import_tasks: log-git-state.yml
  tags:
    - log-git-state
    - backups-only
    - config-only
    - updates-only
